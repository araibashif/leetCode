/*A sentence is a list of words that are separated by a single space with no leading or trailing spaces. Each word consists of lowercase and uppercase English letters.

A sentence can be shuffled by appending the 1-indexed word position to each word then rearranging the words in the sentence.

For example, the sentence "This is a sentence" can be shuffled as "sentence4 a3 is2 This1" or "is2 sentence4 This1 a3".
Given a shuffled sentence s containing no more than 9 words, reconstruct and return the original sentence.
Example 1:

Input: s = "is2 sentence4 This1 a3"
Output: "This is a sentence"
Explanation: Sort the words in s to their original positions "This1 is2 a3 sentence4", then remove the numbers.
*/


class Solution {
    public String sortSentence(String s) {
        TreeMap<Integer,String> map = new TreeMap<>();
        String[] str = s.split(" ");
         
       for(String st : str){
           int len = st.length()-1;
            int number = Character.getNumericValue(st.charAt(len));
           StringBuilder snew = new StringBuilder();
           snew.append(st);
           snew.replace(len,len+1," ");
           String string = snew.toString();
           map.put(number,string);
            }
        StringBuilder string = new StringBuilder();
        for(int n : map.keySet()){
            string.append(map.get(n));
        }
        int i = string.length();
        string.deleteCharAt(i-1);
        String res = string.toString();
        return res;
    }
}
