

int arrayPairSum(int* nums, int numsSize){
int i = 0;
    int j = 0;
    int max_sum=0;
    int k = 0;
    
quickSort(nums,0,numsSize-1);
   while(k<numsSize)
   {
       max_sum+=nums[k];
       k+=2;
   }
    return max_sum;
}
void quickSort(int arr[],int low,int high)
{
    if(low<high)
    {
        int pivot = partition(arr,low,high);
        quickSort(arr,low,pivot-1);
        quickSort(arr,pivot+1,high);
    }
}
int partition(int arr[],int low,int high)
{
    int pivot = arr[low];
    int i = low;
    int j = high;
    int temp;
    while(i<j)
    {
        while(arr[i]<=pivot && i<j)
            i++;
        while(arr[j]>pivot)
            j--;
        if(i<j)
        {
            temp=arr[i];
            arr[i]=arr[j];
            arr[j]=temp;
        }
    }
    temp=arr[low];
    arr[low]=arr[j];
    arr[j]=temp;
    return j;
}
