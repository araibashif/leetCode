/*Given a string s and an integer k. You should construct k non-empty palindrome strings using all the characters in s.

Return True if you can use all the characters in s to construct k palindrome strings or False otherwise.

 

Example 1:

Input: s = "annabelle", k = 2
Output: true
Explanation: You can construct two palindromes using all characters in s.
Some possible constructions "anna" + "elble", "anbna" + "elle", "anellena" + "b"
*/


class Solution {
    public boolean canConstruct(String s, int k) {
        if(s.length()<k){
            return false ;
        }
        HashMap<Character,Integer> map = new HashMap<>();
        for(char c : s.toCharArray()){
            map.put(c,map.getOrDefault(c,0)+1);
        }
        int count =0;
        for(char ch: map.keySet()){
            if(map.get(ch)%2!=0){
                count++;
            }
        }
        if(count>k){
            return false;
        }
        return true;
    }
}
